//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[ORI_CommandTable]");

local t =
{
	Skill_41236SP_ABC = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_41236SP = { CmdCheck = { BallLimit = { [5] = 1 } } },
	
	Skill_41236EX = {},

	Skill_236EX = {},
	Skill_236BorC = {},
	Skill_236A = {}

	Skill_236A_6A =
	{
		num = def_CN_Skill_AddCommand6,
		command = ["6+A","6+B","6+C"],
		
		CmdCheck = 
		{
			SkillType = "AddCommand"
			// HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_236A"] },
			FrameIDCheck = { Only = [110,200] },
		},
		UpdateTable = { name = "Mv_Skill_236A_6A", },
	}
	
	Skill_623EX = {},
	Skill_623BorC = {},
	Skill_623A = {},

	Skill_214EX = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_214BorC = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_214A = { CmdCheck = { BallLimit = { [5] = 1 } } },

	Skill_214_214A =
	{
		num = def_CN_Skill_AddCommand2,
		command = ["4+A",Def_CMD_214A,"24A@D,12@"],
		
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B"] },
			FrameIDCheck = { Only = [190,200] },// 190はSS用
			BallOver = { [5] = 1, [6] = 1 },
		},
		UpdateTable = { name = "Mv_Skill_214_214A", },
	}
	Skill_214_214B =
	{
		num = def_CN_Skill_AddCommand3,
		command = ["4+B",Def_CMD_214B,"24B@D,12@"],
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B"] },
			FrameIDCheck = { Only = [190,200] },// 190はSS用
			BallOver = { [5] = 1, [6] = 1 },
		},
		UpdateTable = { name = "Mv_Skill_214_214B", },
	}
	Skill_214_214C =
	{
		num = def_CN_Skill_AddCommand4,
		command = ["4+C",Def_CMD_214C,"24C@D,12@"],
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B"] },
			FrameIDCheck = { Only = [190,200] },// 190はSS用
			BallOver = { [5] = 1, [6] = 1 },
		},
		UpdateTable = { name = "Mv_Skill_214_214C", },
	}
	
	Skill_214_FF =
	{
		num = def_CN_Skill_AddCommand1,
		command = ["v+B+C","4+B+C","6+B+C","B+C"], // サイズ変える時def_PP_Ori_FFStickTypeに注意
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			return 1;
		}
		CmdCheck = 
		{
			SkillType = "AddCommand",
			HitStatus = "Hit",
			// MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B"] },
			// MvCheck = { Only = ["Mv_Skill_214_214B"] },
			// J214系の着地をキャンセルするのは見た目も性能もよくないので無しに
			MvCheck = { Only = ["Mv_Skill_214A","Mv_Skill_214B","Mv_Skill_214_214A","Mv_Skill_214_214B","Mv_Skill_214_214C","Mv_Skill_214EX","Mv_Skill_63214EX"] },
			// FrameIDCheck = { Only = 200 },
			BallLimit = { [7] = 1 },//214派生のときだけ7=1になっていて、フィニッシュ部分で0になる
		},
		function CmdAfterFunc()
		{
			if( BMvTbl.IsCpu()==0 ) // プレイヤーの時
			{
				// 発動時のレバー方向を記憶
				local cmdpos = BCMDTbl.GetSuccessButtonPos();
				BMvTbl.SetPP(def_PP_Ori_FFStickType,cmdpos);
			}
			else
			{
				BMvTbl.SetPP(def_PP_Ori_FFStickType,3);
			}
		}
		UpdateTable = { name = "Mv_Via_214_FF", },
	}
	Skill_J214_FF =
	{
		num = def_CN_Skill_AddCommand5,
		command = ["B+C"],
		posstatus = _PosState_Air,
		function CmdBeforeFunc()
		{
			if( BMvEff.GRD_GetJudgeResult() <= 0 )
			{
				// 通常
				if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			}
			else
			{
				// ヴォーパル
				if( BMvTbl.AddAirCount( 1, 0 ) ) return 0;
			}
			return 1;
		}
		CmdCheck = 
		{
			SkillType = "AddCommand",
			HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_J214A","Mv_Skill_J214B","Mv_Skill_J214EX"] },
			PosState = "Air",
		},
		UpdateTable = { name = "Mv_Via_J214_FF", },
	}
	
	Skill_J214EX = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_J214BorC = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_J214A = { CmdCheck = { BallLimit = { [5] = 1 } } },

	Skill_0202EX = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_0202BorC = { CmdCheck = { BallLimit = { [5] = 1 } } },
	Skill_0202A = { CmdCheck = { BallLimit = { [5] = 1 } } },

	
	Atk_Std4C = {},
	Atk_Cro3C = {},

	Atk_Std6B = {},
	Atk_Cro3B = {},	
	
	Atk_Air2C = {},
	Atk_StdBandC =
	{
		command = ["v+B+C","4+B+C","6+B+C","B+C"], // サイズ変える時def_PP_Ori_FFStickTypeに注意
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			return 1;
		}
		function CmdAfterFunc()
		{
			if( BMvTbl.IsCpu()==0 ) // プレイヤーの時
			{
				// 発動時のレバー方向を記憶
				local cmdpos = BCMDTbl.GetSuccessButtonPos();
				BMvTbl.SetPP(def_PP_Ori_FFStickType,cmdpos);
			}
			else
			{
				BMvTbl.SetPP(def_PP_Ori_FFStickType,3);
			}
		}
	},
	Atk_AirBandC = {
		function CmdBeforeFunc()
		{
			if( BMvEff.GRD_GetJudgeResult() <= 0 )
			{
				// 通常
				if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			}
			else
			{
				// ヴォーパル
				if( BMvTbl.AddAirCount( 1, 0 ) ) return 0;
			}
			return 1;
		}
		CmdCheck = {
			HeightLimit = def_POS_AirDashLimitHeight, // 高度制限をつける
		}
	},
	
	Skill_63214EX = { CmdCheck = { BallLimit = { [5] = 1 } } },
}


local ar =
[
	{
		CheckMoveName="Mv_Atk_StdA",
		UpdateMoveName="Mv_Atk_CroB",
	},
	{
		CheckMoveName="Mv_Atk_CroB",
		UpdateMoveName="Mv_Atk_StdB",
		ResetTmplName="Atk_CroB",
	},
	{
		CheckMoveName="Mv_Atk_StdB",
		UpdateMoveName="Mv_Skill_214A",
		ResetTmplName="Atk_StdB",
	},
	{
		CheckMoveName="Mv_Skill_214A",
		UpdateMoveName="Mv_Skill_SSRelayAtk",
		ResetTmplName="Skill_214A",
		CmdCheck = 
		{
			SkillType = "AddCommand",
			FrameIDCheck = { Only = 190 },
		}
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_SSRelayAtk",
		ResetTmplName="Skill_SSRelayAtk",
		UpdateMoveName="Mv_Skill_41236SP",
		CmdCheck = 
		{
			SkillType = "SpSpecial",
			HitStatus="Damage",
			Cost = { ComboGauge = 20000 },
		}
	},	
]
Battle_Std.MakeStdCombo( t, ar );

CHR004_CommandTable <- Battle_Std.MakeCommandTable( { command=t } );
