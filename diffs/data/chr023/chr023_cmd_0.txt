//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[KUO_CommandTable]");

const CDef_Kuo_PP_FFStick = 5; // FF入力時のStick方向　mv_0.txtでも定義
const CDef_Kuo_PP_FFZurashi = 9; // FFをズラし押しで出したか　mv_0.txtでも定義

local check_FFAtk = function()
{
	if( BMvTbl.GetPP(0) > 0 )
	{
		if( Battle_Std.MoveCode.CheckFlag( def_MC_CharaFlag1 ) ) // FF状態
		{
			return 1;
		}
	}
	else
	{
		// FF解除済みだけど直前のMvがFFで今がJBかJCかJ6Cだったらずらし押しなのでOKにする
		local lastMv = BMvTbl.ChangeMv_GetMvName();
		if( lastMv=="Mv_Atk_FFBase" || lastMv=="Mv_Atk_FF_WalkF" || lastMv=="Mv_Atk_FF_WalkB" || lastMv=="Mv_Atk_FF_WalkStopF" || lastMv=="Mv_Atk_FF_WalkStopB" )
		{
			local nowMv = BMvTbl.GetMvName();
			local mvs = BMvTbl.GetMvStatus();
			if( (nowMv=="Mv_Atk_AirA" || nowMv=="Mv_Atk_AirB" || nowMv=="Mv_Atk_AirC" || nowMv=="Mv_Atk_Air6C") && mvs.MvCount <= 2 )
			{
				// _dp("\n FFから来たずらし押し");
				return 1;
			}
		}
	}
	return 0;
}
// 623の後必殺技でキャンセルできるかどうか
local checkWarpAtk_SpecialCancel = function()
{
	local mvname = BMvTbl.GetMvName();
	if( mvname == "Mv_Skill_623A" || mvname == "Mv_Skill_623B" || mvname == "Mv_Skill_J623A" || mvname == "Mv_Skill_J623B")
	{
		if( Battle_Std.MoveCode.CheckFlag( def_MC_Shielded ) )
		{
			// _dp("\n シールドされてる…");
			return 0;
		}
	}
	return 1;
}

local t =
{
	Skill_41236SP = {},
	Skill_41236SP_ABC = {},

	Skill_41236EX = { command = "@T,v,52@^C@D,11@", CmdCheck = { SkillType="ExSpecialJump", } },
	Skill_41236BorC =
	{ 
		command = ["@T,v,52@^B@D,11@","@T,v,52@^C@D,11@"], CmdCheck = { SkillType="SpecialJump",},
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_41236A =
	{ 
		command = "@T,v,37@^A@D,11@", CmdCheck = { SkillType="SpecialJump",},
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	}
	
	/*
	// しゃがみからのぼり技を出そうとして暴発するので廃止
	Skill_J41236EX = { command = "@T,v,52@^C@D,11@", },
	Skill_J41236BorC = { command = ["@T,v,52@^B@D,11@","@T,v,52@^C@D,11@"], },
	Skill_J41236A = { command = "@T,v,52@^A@D,11@" }
	*/

	Skill_236EX = {},
	Skill_236BorC =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_236A =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Skill_J236EX =
	{
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			return 1;
		}
	},
	Skill_J236C =
	{
		command = [">+B+C"],
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_J236BorC =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_J236A =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Skill_0202EX = {},	
	Skill_0202BorC =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_0202A =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Skill_J0202EX =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			return 1;
		}
	},
	Skill_J0202BorC =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			if( BMvTbl.AddAirCount( 3, 0 ) >= 1 ) return 0; // ジャンプ中は1回しか出せない
			return 1;
		}
	},
	Skill_J0202A =
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			if( BMvTbl.AddAirCount( 3, 0 ) >= 1 ) return 0; // ジャンプ中は1回しか出せない
			return 1;
		}
	},
	
	Skill_214EX = { CmdCheck = { BallLimit = { [1] = 1 } } },
	Skill_214BorC =
	{
		CmdCheck = { BallLimit = { [1] = 1, [2] = 1 } },
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_214A =
	{
		CmdCheck = { BallLimit = { [0] = 1, [1] = 1 } },
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_J214C =
	{
		command = ["<+B+C"],
		CmdCheck = { BallLimit = { [1] = 1, [3] = 1 } },
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Skill_623EX = {},
	Skill_623BorC = 
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_623A = 
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Skill_J623EX =
	{
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			return 1;
		}
	},
	Skill_J623BorC = 
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( BMvTbl.AddAirCount( 2, 0 ) >= 1 ) return 0; // ジャンプ中は1回しか出せない
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_J623A = 
	{
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	Skill_J623C =
	{
		command = ["2+B+C"],
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel,check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			return 1;
		}
	},
	
	Atk_Std4C = {},	
	
	Atk_Std6B = {},	
	
	Atk_Std6C = {},	
	Atk_Cro3C = {},	
	Atk_Air6C =
	{
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( check_FFAtk() ) return 0; //FF中はダメ
			return 1;
		}
	},
	
	Atk_6B_6B = {
		CmdCheck = 
		{
			SkillType = "AnyNormalCancelFlag",
		},
	},	
	
	Skill_DashWarp = 
	{
		num = def_CN_Atk_DashAdd,
		command = ["6+A+B"],
		flags = [ "lastdelay" ],
		function CmdBeforeFunc()
		{
			// 6ABのボタンダッシュの操作ではそのまま発動しないようにする
			// 66>6ABか、6AB>6ABが必要
			if( BMvTbl.GetPP(def_PP_CmdStatus)&def_PP_CS_DoujiDash_F )
			{
				return 0;
			}
			// if( BMvTbl.GetPP(CDef_Kuo_PP_DashAddTiming) == 0 ) return 0;
			return 1;
		},
		CmdCheck = 
		{
			SkillType = "None", MvCheck = { DoujiOnly = ["Mv_DashWait_F","Mv_Dash_F"] }
		},
		
		UpdateTable = { name = "Mv_Skill_DashWarp", }	
	}
	
	// 236派生
	Skill_236_AddA = 
	{
		num = def_CN_Skill_AddCommand6,
		command = ["A","B","C"],
		flags = [ "lastdelay" ],
		CmdCheck = 
		{
			SkillType = "AddCommand",
			// HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_236A"] },
		},
		function CmdBeforeFunc()
		{
			local mvs = BMvTbl.GetMvStatus();
			if( !(mvs.Param1&1) ) return 0;
			if( BMvTbl.GetMvName()=="Mv_Skill_236A" && BMvTbl.GetPP( def_PP_StdComboChain ) >= 4 )
			{
				// スマートステア中なので失敗
				return 0;
			}
			return 1;
		}
	}
	Skill_236_AddB = 
	{
		num = def_CN_Skill_AddCommand7,
		command = ["A","B","C"],
		flags = [ "lastdelay" ],
		CmdCheck = 
		{
			SkillType = "AddCommand",
			// HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_236B"] },
		},
		function CmdBeforeFunc()
		{
			local mvs = BMvTbl.GetMvStatus();
			if( !(mvs.Param1&1) ) return 0;
			return 1;
		}
	}
	Skill_J236_JAddA = 
	{
		num = def_CN_Skill_AddCommand8,
		command = ["A","B","C"],
		flags = [ "lastdelay" ],
		posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "AddCommand",
			// HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_J236A"] },
		},
		function CmdBeforeFunc()
		{
			local mvs = BMvTbl.GetMvStatus();
			if( !(mvs.Param1&1) ) return 0;
			return 1;
		}
	}
	Skill_J236_JAddB = 
	{
		num = def_CN_Skill_AddCommand9,
		command = ["A","B","C"],
		flags = [ "lastdelay" ],
		posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "AddCommand",
			// HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Skill_J236B"] },
		},
		function CmdBeforeFunc()
		{
			local mvs = BMvTbl.GetMvStatus();
			if( !(mvs.Param1&1) ) return 0;
			return 1;
		}
	}

	Atk_StdBandC = {
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			if( BMvTbl.AddAirCount( 1, 0 ) >= 1 ) return 0; // ジャンプ中は1回しか出せない
			BMvTbl.SetPP(CDef_Kuo_PP_FFStick, BMvTbl.GetStickHold()); // レバー方向を記憶
			local mvs = BMvTbl.GetMvStatus();
			local movable = Battle_Std.MoveCodeEx.CheckFlag( 3, def_MC3_FromNoCancelMv );
			if( mvs.MvCount <= 2 && movable ) BMvTbl.SetPP(CDef_Kuo_PP_FFZurashi, 1); // 行動可能からズラし押しで出した
			return 1;
		}
	},
	Atk_AirBandC = {
		function CmdBeforeFunc() : (checkWarpAtk_SpecialCancel)
		{
			if( checkWarpAtk_SpecialCancel() == 0 ) return 0;
			if( BMvTbl.AddAirCount( 1, 0 ) >= 1 ) return 0; // ジャンプ中は1回しか出せない
			BMvTbl.SetPP(CDef_Kuo_PP_FFStick, BMvTbl.GetStickHold()); // レバー方向を記憶
			local mvs = BMvTbl.GetMvStatus();
			local movable = Battle_Std.MoveCodeEx.CheckFlag( 3, def_MC3_FromNoCancelMv );
			if( mvs.MvCount <= 2 && movable ) BMvTbl.SetPP(CDef_Kuo_PP_FFZurashi, 1); // 行動可能からズラし押しで出した
			return 1;
		}
	},
	Atk_AirBandC_End = {
		num = def_CN_Skill_AddCommand1, name = "Cmd_Atk_AirBandC_End", command = ["D"],
		flags = [ "lastdelay" ],
		posstatus = _PosState_Air,
		CmdCheck = 
		{
			// SkillType = "Normal",
			MvCheck = {
			Fail = ["Mv_Atk_AirBandC_End","Mv_Atk_StdBandC","Mv_Atk_AirBandC"]
			},
		},
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			return 1;
		}
	},
	
	//FFの構え
	Atk_FF_WalkF =
	{
		num = def_CN_Basic_AddMove8, name = "Cmd_Atk_FF_WalkF", command = [">","8"],
		posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "None",
			MvCheck = {
			// Fail = ["Mv_Atk_FF_WalkF","Mv_Atk_FF_WalkStopF"]
			Fail = ["Mv_Atk_FF_WalkF"]
			},
		},
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			return 1;
		}
	},
	Atk_FF_WalkB =
	{
		num = def_CN_Basic_AddMove9, name = "Cmd_Atk_FF_WalkB", command = ["<","2"],
		posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "None",
			MvCheck = {
			// Fail = ["Mv_Atk_FF_WalkB","Mv_Atk_FF_WalkStopB"]
			Fail = ["Mv_Atk_FF_WalkB"]
			},
		},
		function CmdBeforeFunc() : (check_FFAtk)
		{
			if( !check_FFAtk() ) return 0;
			return 1;
		}
	},
}

local ar =
[
	{
		CheckMoveName="Mv_Atk_StdA",
		UpdateMoveName="Mv_Atk_StdB",
	},
	{
		CheckMoveName="Mv_Atk_StdB",
		UpdateMoveName="Mv_Atk_StdC",
		ResetTmplName="Atk_StdB",
	},
	{
		CheckMoveName="Mv_Atk_StdC",
		UpdateMoveName="Mv_Skill_236A",
		ResetTmplName="Atk_StdC",
	},
	{
		CheckMoveName="Mv_Skill_236A",
		UpdateMoveName="Mv_Skill_SSRelayAtk",
		ResetTmplName="Skill_236A",
		CmdCheck = 
		{
			SkillType = "AddCommand",
			ParamFlagCheck = { Only = { [1]=1 } },
		}
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_SSRelayAtk",
		ResetTmplName="Skill_SSRelayAtk",
		UpdateMoveName="Mv_Skill_41236SP",
		CmdCheck = 
		{
			SkillType = "SpSpecial",
			HitStatus="Damage",
			Cost = { ComboGauge = 20000 },
		}
	},
	
	

]
Battle_Std.MakeStdCombo( t, ar );

CHR023_CommandTable <- Battle_Std.MakeCommandTable( { command=t } );

