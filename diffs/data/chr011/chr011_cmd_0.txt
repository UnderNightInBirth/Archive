//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[ELT_CommandTable]");

local t =
{
	Skill_41236SP_ABC = {},
	Skill_41236SP = {},

	Skill_236EX =
	{
		function CmdBeforeFunc()
		{
			if( BMvTbl.GetPP(def_PP_Elt_Bullet) >= def_CHR_Elt_BulletMax ) return 0; // 弾丸があるか
			return 1;
		}
	},
	Skill_236BorC = {},
	Skill_236A = {}
	
	Skill_623EX = {},
	Skill_623BorC = {},
	Skill_623A = {},
	
	Skill_214EX = {},
	Skill_214BorC = {},
	Skill_214A = {},
	
	Skill_421EX = {},
	Skill_421BorC = {},
	Skill_421A = {},

	Skill_0202C = {},
	Skill_0202B = {},
	Skill_0202A = {},
	
	Skill_J214EX = {},
	Skill_J214BorC = {},
	Skill_J214A = {},
	
	Skill_J623EX = {},
	Skill_J623BorC = 
	{
		CmdCheck = 
		{
			MvCheck = { Fail = ["Mv_Skill_J623A"] },
		},
	},
	Skill_J623A = 
	{
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 0, 0 ) ) return 0;
			return 1;
		}
	},
	
	Atk_Std6B = {},
	Atk_Std3C = {},	

	Atk_Air2B = {},

	// C追加C
	Atk_C_C = 
	{
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Atk_StdC"] },
			ParamFlagCheck = { Only = { [2]=8 } },
		},
	},	
	
	//コンボ中１回のみにしておきたい
	Skill_AerialJump = 
	{
		num = def_CN_Skill_AddCommand1,
		CmdCheck = 
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Atk_Std3C"] },
			HitStatus = "Damage",
			FrameIDCheck = { Only = 100 },
		},
		function CmdBeforeFunc()
		{
			if( Battle_Std.EnemyDamageFlag_Check(def_DF_AerialJumpCanseled) ) return 0; //コンボ中は１回のみ
			return 1;
		},
		command = "8", //↑要素
		UpdateTable = { name = "Mv_Skill_AerialJump", }
	},

	//エリアル中のみにする
	MultiJumpCancel_F =
	{ 
		function CmdBeforeFunc()
		{
			if( BMvTbl.GetPP(def_PP_Elt_AerialStatus)!=1 ) return 0; //エリアル状態じゃなかったらダメ
			return 1;
		},
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }
	},
	MultiJumpCancel_N =
	{
		function CmdBeforeFunc()
		{
			if( BMvTbl.GetPP(def_PP_Elt_AerialStatus)!=1 ) return 0; //エリアル状態じゃなかったらダメ
			return 1;
		},
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }
	},
	MultiJumpCancel_B =
	{
		function CmdBeforeFunc()
		{
			if( BMvTbl.GetPP(def_PP_Elt_AerialStatus)!=1 ) return 0; //エリアル状態じゃなかったらダメ
			return 1;
		},
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }
	},
	
	Throw_A = {},
	
	Atk_StdBandC = {},
	
	BackDash_Cancel =
	{
		num = def_CN_Skill_AddCommand2, name = "Cmd_BackDash_Cancel", command = ["0404","4+A+B"],
		flags = [ "lastdelay" ],
		function CmdBeforeFunc()
		{
			if( BMvEff.GRD_GetJudgeResult() <= 0 ) return 0; // VORPAL中のみ
			return 1;
		}
		CmdCheck = { SkillType = "Special" },
		UpdateTable = { name = "Mv_Dash_B", }
	}
	Skill_J0202B = 
	{
		command = ["0404","4+A+B"],
		flags = [ "lastdelay" ],
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 1, 0 ) != 0 ) return 0; // 回数制限チェック
			
			return 1;
		}
		//高度制限をつける
		CmdCheck = {
			HeightLimit = 64*128, //def_POS_AirDashLimitHeight だとDBから出せないので制限をゆるくした
			SkillType="SpecialDouji",
		}
	},
	
	Atk_Std6C = {},	
}


//CheckMoveName	: この攻撃中にＡを押すとでる
//UpdateMoveName	: 出る攻撃
//ResetTmplName	: この攻撃を本来のコマンドで入力して出した場合、Ａ連状態は解除される

local ar =
[
	{
		UpdateMoveName="Mv_Atk_StdB", //B
		CheckMoveName="Mv_Atk_StdA",
	},
	{
		UpdateMoveName="Mv_Atk_StdC",
		CheckMoveName="Mv_Atk_StdB",
	},
	{
		UpdateMoveName="Mv_Skill_214A",
		CheckMoveName="Mv_Atk_StdC",
	},
	{
		UpdateMoveName="Mv_Skill_SSRelayAtk",
		CheckMoveName=["Mv_Skill_214A","Mv_Skill_214A_Hit"],
		ResetTmplName="Skill_214A",
		CmdCheck = 
		{
			SkillType = "AddCommand",
			FrameIDCheck = { Only = [50,500,1000] },
		}
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_SSRelayAtk_Hit",
		ResetTmplName="Skill_SSRelayAtk",
		UpdateMoveName="Mv_Skill_41236SP",
		CmdCheck = 
		{
			SkillType = "SpSpecial",
			HitStatus="Damage",
			Cost = { ComboGauge = 20000 },
		}
	},
]

Battle_Std.MakeStdCombo( t, ar );

CHR011_CommandTable <- Battle_Std.MakeCommandTable( { command=t } );

