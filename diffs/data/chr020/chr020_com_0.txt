//__dofile__( "./data/_combase.txt" );

local nowskillnum = 0;

//-------------------------------------------------------------
// com動作生成

local comcount = 200; // 最大数 できるだけギリギリに
local com = CCom(comcount); // COM用オブジェクト

com.SetGuardAvg( 40 ); // ガード確率


local stmp = 0;
local mtmp = 0;

{	// ０は待機
	stmp = com.GetSkill(0); // 作成
	stmp.checkfunc = function() // チェック
	{
		return com_frequency2;
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		return 1;
	}
	// 0-0
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.Set( 0, 0,  10, 50,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
}

// 共通アクション定義
AddBasicMove( com, {
	SPSkill_XlenType = 1, // ３ゲージの発動間合いタイプ 0:ド密着 1:密着〜中距離 2:どこでも
	AVG_ThrowRecover = 70, // 投げ抜け失敗確率
	
	UNI_Combo = { recipe = ["B",{rapid=1},"2C","C","GuardEnd","9","A","B","C",{rapid=1},"J236A"] }, // ＵＮＩ汎用空コン
	Assault_GedanA = "2A",
	Assault_TyudanC = "C",
	EXMutekiSkill = { recipe=["236EX"] },
	AntiAirSkill = { recipe=[{key="2"},{dl=8,random=3},"236B"] },//コマンド入力時間の遅延を入れる
	GrapAtk = { stick=3, button=_eComButton_C },
	AirTuigeki_Combo = { recipe = ["9","A","B","C"] }, // 空中追撃コン
	Hiroi_Combo = { recipe = [ "C","GuardEnd","9","A","B","C",{rapid=1},"J236A" ] }, // 拾いコン
	Assault_Combo = { recipe = [ "6D","*C",{rapid=1},{landwait=20},"2A","GuardEnd","2B"], fintag="renkei_1" }, // アサルトコン
	Sasikomi_Atk = [ // 差し込み技
	{ recipe=["C","214A",{irekomi=26},"4A" ] },
	{ recipe=["2C","214A",{irekomi=26},"4A" ] },
	{ recipe=["4C","214A",{irekomi=26},"4A" ] },
	{ recipe=["236A"] },
	{ recipe=["66B","236B"] },
	{ recipe=["66C","214B",{irekomi=35},"4A"] },
	],
	Follow_Combo = [ // ガードされた時のフォロー連携 0:通常 2:必殺 3:ＥＸ
	{ type=0, recipe=[ "A",{irekomi=4},"2A"] },
	{ type=0, recipe=[ "A",{irekomi=4},"2A"] },
	{ type=0, recipe=[ "FF",{irekomi=10},"D"] },
	{ type=0, recipe=[ ["FF",10]] },
	{ type=1, recipe=[ "236A"] },
	{ type=1, recipe=[ "22A"] },
	{ type=1, recipe=[ "214A",{irekomi=26},"4A" ] },
	{ type=1, recipe=[ "214A",{irekomi=26},"4B" ] },
	{ type=1, recipe=[ "214A",{irekomi=26},"4C" ] },
	{ type=1, recipe=[ "214A",{irekomi=26},"4D" ] },
	{ type=2, recipe=[ "22EX" ] },
	],
	
	// コンボ登録
	Pro_Combos = [
	{ // コンボ
	
	xlen = 30000, // 発動距離
	comlv = [0,4],
	// debug = 1,
	list = [
		{ recipe=[ "*A","B"], fintag="renkei_2" },
		{ recipe=[ "*2A","2B" ], fintag="renkei_1" },
		{ recipe=[ "*2A","*2A", ], fintag="renkei_1" },
		{ recipe=[ "6D","*C",{landwait=40}, "*2A","2B" ], fintag="renkei_1" },
		{ recipe=[ {dl=0,random=15},"*A+D", ], },
		{ recipe=[ {dl=5,random=15},"*2A", ], fintag="renkei_1" },//遅らせ打撃
		{ recipe=[ "*A", ], fintag="renkei_2" },
		{ recipe=[ "*2A","2B","2C","GuardEnd","C","9jc","A","B","C",{rapid=1},"2C",{landwait=40}, ], fintag="Fin_66B" },
		// { recipe=[ "*A","2B","C","GuardEnd","2C","214B",{irekomi=35},"4A",{dl=53}, ], fintag="Fin_66B" },
		]
	},
	
	// ※B始動コンボ
	{
	xlen = 60000, // 発動距離
	// debug = 1,
	list = [
		{ recipe=[ "*2B" ], fintag="renkei_1" },
		{ recipe=[ "*2B","C","GuardEnd","236A",{landwait=40},{dl=7},"66B",{rapid=3},"SS"], fintag="Fin_EXIW"},
		{ recipe=[ "*2B","C","GuardEnd","236A",{landwait=40},{dl=7},"B"], fintag="Fin_Skill"},
		]
	},	
	
	{ // コンボ
	xlen = 100000, // 発動距離
	NearNG = 80000,
	// debug = 1,
	list = [
		{ recipe=[ "C", ], fintag="renkei_1"},
		{ recipe=[ "2C", ], fintag="renkei_2"},
		{ recipe=[ "*2C","C","GuardEnd","22B",{irekomi=20},{wait=60},"3C","4C","6C",{rapid=3},"9jc","A","B","C",{rapid=1},"2C",{rapid=3},"J236B"], }
		{ recipe=[ "*2C","C","GuardEnd","22B",{irekomi=20},{wait=60},"3C","4C","6C",{rapid=3},"9jc","A","B","C",{rapid=1},"2C",{rapid=3},{landwait=40},"66B",{rapid=3},"236B"], }
		]
	},
	{ // コンボ
	xlen = 100000, // 発動距離
	NearNG = 70000,
	// debug = 1,
	list = [
		{ recipe=[ "*C","GuardEnd","214B",{irekomi=35},"4A",{rapid=1},], fintag="Fin_EXIW" },
		{ recipe=[ "*C","GuardEnd","22B",{irekomi=20},{dl=38},"B","4C","6C",{rapid=3},"9jc","A","B","C",{rapid=1},"2C",{rapid=3},"J236B"], }
		]
	},
	
	], // Pro_Combos

	
	// コンボ登録
	Pro_Finishs = [
	{ // コンボ
		fintag = "renkei_2",
		x_range = [30000,60000], // 近距離
		min_cp = 60,
		// debug = 1,
		list =
		[
			{ recipe=[ "C","236A",{landwait=40},{dl=7},"66B",{rapid=3},"SS" ] },
		]
	},
	{ // コンボ
		fintag = "renkei_2",
		x_range = [20000,40000], // 近距離
		min_cp = 48,
		comlv = [4,4],
		// debug = 1,
		list =
		[
			{ recipe=[ "C","22A",{irekomi=10},{dl=48},"B","4C","6C",{rapid=3},"214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"2C",{rapid=2},{landwait=60},"6C",{rapid=3},"236B" ] },
		]
	},
	/*
	{ // コンボ
		fintag = "renkei_1",
		min_cp = 90,
		comlv = [4,4],
		// debug = 1,
		list =
		[
			{ recipe=[ "214B",{irekomi=35},"4A","GuardEnd",{dl=58},"2B","22A",{irekomi=10},{wait=60},"3C","4C","6C",{rapid=3},"9jc","C",{rapid=1},"B","2C",{rapid=3},{landwait=30},"66B",{rapid=3},"SS", ], },
			{ recipe=[ "214B",{irekomi=35},"4A","GuardEnd",{dl=58},"2B","22A",{irekomi=10},{wait=60},"3C","4C","6C",{rapid=3},"9jc","C",{rapid=1},"B","2C",{rapid=3},{landwait=30},"66B",{rapid=3},"236B", ], },
			{ recipe=[ "214B",{irekomi=35},"4A","GuardEnd",{dl=58},"2B","22A",{irekomi=10},{wait=60},"3C","4C","6C",{rapid=3},"9jc","C",{rapid=1},"B","2C",{rapid=3},{landwait=30},"2C","6C",{rapid=3},"236B", ], fintag="Fin_AirEX"},
			{ recipe=[ "214B",{irekomi=35},"4A","GuardEnd",{dl=58},"2B","236A",{landwait=40},{dl=5},"2C","3C","4C","6C",{rapid=3},"214A",{irekomi=24},"4B","8",{dl=5},{wait=40},"C",{rapid=1},"2C",{rapid=3},"J214B", ], },
		]
	},
	*/
	
	{ // コンボ
		fintag = "renkei_2",
		min_cp = 76,
		comlv = [4,4],
		// debug = 1,
		list =
		[
			{ recipe=[ "C","236A",{landwait=40},{dl=7},"2B","22A",{irekomi=10},{dl=48},"B","4C","6C",{rapid=3},"214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"2C",{rapid=2},{landwait=60},"6C",{rapid=3},"236B" ] },
			{ recipe=[ "C","236A",{landwait=40},{dl=7},"2B","22A",{irekomi=10},{dl=48},"B","4C","6C",{rapid=3},"214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"2C",{rapid=2},{landwait=60},"6C",{rapid=3},"236B" ] fintag="Fin_AirEX"},
			{ recipe=[ "C","236A",{landwait=40},{dl=7},"2B","22A",{irekomi=10},{dl=48},"B","4C","6C",{rapid=3},"214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"2C",{rapid=2},{landwait=60},"6C",{rapid=3},"SS",{landwait=60} ] fintag="Fin_EXIW"},
		]
	},
	{ // コンボ
		fintag = "renkei_1",
		x_range = [0,70000], // 近距離
		// debug = 1,
		list =
		[
			{ recipe=[ "2C","3C","GuardEnd","9","A","B","C",{rapid=1},"J236A" ] },
			{ recipe=[ "2C", ], fintag="Fin_Skill" },
			{ recipe=[ "2C","2FF" ], },
		]
	},
	{ // コンボ
		fintag = "renkei_1",
		x_range = [0,65000], // 近距離
		min_cp = 48,
		// debug = 1,
		list =
		[
			{ recipe=[ "2C","3C","4C","C","9jc","A","B","C",{rapid=1},"2C",{landwait=40}, ], fintag="Fin_66B" },
			{ recipe=[ "2C","3C","4C","214A",{irekomi=26},"4A",{wait=40},"66B",{rapid=3},"SS" ] },
			{ recipe=[ "2C","3C","4C","214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"2C",{landwait=40},"66B",{rapid=3},"236B",{rapid=1} ], fintag="Fin_AirEX" },
		]
	},
	
	{ // コンボ
		fintag = "Fin_66B",
		xlen = 30000, // 発動距離
		// debug = 1,
		list =
		[
			{ recipe=[ "66B",{rapid=3},"SS",{landwait=40} ], fintag="Fin_EXIW"},
			{ recipe=[ "66B",{rapid=3},"236A" ], },
			{ recipe=[ "66B",{rapid=3},"236B",{rapid=1},{dl=11} ], fintag="Fin_EXIW"},
		]
	},
	{ // コンボ
		fintag = "Fin_Skill",
		// debug = 1,
		list =
		[
			{ recipe=[ "214A",{irekomi=26},"4A",{wait=60} ], fintag="Fin_66B" },
			{ recipe=[ "214A",{irekomi=26},"4A",{wait=60},"66B",{rapid=3},"SS" ] },
			{ recipe=[ "214A",{irekomi=26},"4B","8",{wait=40},"C",{rapid=1},"J236A" ],  },
		]
	},
	{ // シメ
		fintag = "Fin_AirEX",
		gauge = [50,0],
		// debug = 1,
		list =
		[
			{ recipe=[ "J236EX",{irekomi=10},{landwait=60},{dl=6},"66B",{rapid=3},"SS" ] },
			{ recipe=[ "J236EX",{irekomi=10},{landwait=60},{dl=6},"66B",{rapid=3},"236A" ] },
		]
	},
	{ // シメ
		fintag = "Fin_EXIW",
		gauge = [100,0],
		// debug = 1,
		list =
		[
			{ recipe=[ "IW" ] },
		]
	},	
	
	{ // シメ
		fintag = "Fin_EXIW",
		gauge = [50,0],
		// debug = 1,
		list =
		[
			{ recipe=[ "236EX" ] },
			{ recipe=[ "22EX" ] },
		]
	},
	
	], // Pro_Finishs
	
	Pro_Control = [
	
	{ // ----
		x_range = [45000,70000], // 近距離
		// debug = 1,
		list =
		[
			{ recipe=[ "66B",{rapid=3},"236B","GuardEnd",{landwait=60},{dl=8},"3C","4C","6C",{rapid=3},"236A" ], },
			{ recipe=[ "66B",{rapid=3},"236B","GuardEnd",{landwait=60},{dl=8},"3C","4C","6C",{rapid=3},"9jc","A","B","C",{rapid=1},"2C",{rapid=3},"J236B"], }
			{ recipe=[ "66C","236A" ], },
			{ recipe=[ "236A", ], fintag="Fin_AirEX"},
			{ recipe=[ "i214B", ], },
			{ recipe=[ "22A", ], },
			{ recipe=[ "C","SS", ], },
			{ recipe=[ "4C","SS", ], },
			{ recipe=[ "C", ], fintag="renkei_1"},
			{ recipe=[ "2C", ], fintag="renkei_2"},
		]
	},
	{ // ----
		x_range = [40000,80000], // 近距離
		// debug = 1,
		list =
		[
			{ recipe=[ "C", ], fintag="renkei_1"},
			{ recipe=[ "2C", ], fintag="renkei_2"},
			{ recipe=[ "9",{dl=0,random=10},"J214B", ], },
			{ recipe=[ "9",{dl=0,random=10},"J214C", ], },
		]
	},
	{ // ----
		x_range = [70000,150000], // 近距離
		// debug = 1,
		list =
		[
			{ recipe=[ ["FF",10] ], },
			{ recipe=[ "2FF", ], },
			{ recipe=[ "i2FF", ], },
			{ recipe=[ "22B", ], },
			{ recipe=[ "i214C", ], },
			{ recipe=[ "9",{dl=10,random=5},"J236A", ], },
			{ recipe=[ "9",{dl=15,random=10},"J236B", ], },
			{ recipe=[ "6D",{dl=10,random=4},"J236A", ], },
			{ recipe=[ "6D",{dl=10,random=4},"J236B", ], },
			{ recipe=[ "9",{dl=0,random=10},"J214B", ], },
			{ recipe=[ "9",{dl=0,random=10},"J214C", ], },
		]
	},
	{ // ----
		x_range = [70000,200000], // ほぼどこでも
		// debug = 1,
		list =
		[
			{ recipe=[ "214A",{irekomi=35},"4D" ], },
			{ recipe=[ "214B",{irekomi=35},"4D" ], },
			{ recipe=[ "214C",{irekomi=35},"4D" ], },
			{ recipe=[ "9",{dl=0,random=10},"J214A", ], },
			{ recipe=[ "9",{dl=0,random=10},"J214B", ], },
			
		]
	},

	] // Pro_Control	
	// コンボ登録
	Pro_Guarded = [
	{ // コンボ
		fintag = "renkei_1",
		// debug = 1,
		list =
		[
			{ recipe=[ "FF",{irekomi=10},], fintag="renkei_FF"},
			{ recipe=[ ["FF",10],], },
			{ recipe=[ "(A)", ], },
			{ recipe=[ "B",{dl=5,random=18},"(A)" ], },
			{ recipe=[ "B","i4C", ], fintag="Fin_Skill" },
			{ recipe=[ "B","i4C","(A)" ],  },
			{ recipe=[ "C",{dl=5,random=18},"(A)" ], },
			{ recipe=[ "C",{dl=5,random=18}, ], fintag="Fin_Skill"},
			{ recipe=[ "C",{dl=5,random=10},"2C","(A)" ], },
			{ recipe=[ "C",{dl=5,random=10},"2C","6C",{wait=40},"6ABD" ], },
			{ recipe=[ "C",{dl=5,random=18},"2C","6C",{rapid=3},],fintag="Fin_Skill" },
			
		]
	},
	{ // コンボ
		fintag = "renkei_2",
		// debug = 1,
		list =
		[
			{ recipe=[ "FF",{irekomi=10},], fintag="renkei_FF"},
			{ recipe=[ ["FF",10],], },
			{ recipe=[ "(2A)", ], },
			{ recipe=[ "2B","(2A)", ], },
			{ recipe=[ "2B","i4C", ], fintag="Fin_Skill" },
			{ recipe=[ "2B","i4C","(A)" ],  },
			{ recipe=[ "2C","6C",{wait=40},"6ABD" ], },
			{ recipe=[ "2C","6C",{rapid=3}],fintag="Fin_Skill" },
			
		]
	},
	{ // シメ
		fintag = "Fin_Skill",
		// debug = 1,
		list =
		[
			{ recipe=[ "FF",{irekomi=10},], fintag="renkei_FF"},
			{ recipe=[ ["FF",10],], },
			{ recipe=[ "236B", ], },
			{ recipe=[ "236B", ], fintag="Fin_AirEX"},
			{ recipe=[ "214A", ], },
			{ recipe=[ "214A",{irekomi=26},"4A" ], fintag="Fin_EXIW"},
			{ recipe=[ "214A",{irekomi=26},"4A" ], fintag="Fin_66B" },
			{ recipe=[ "214A",{irekomi=26},"4B" ], },
			{ recipe=[ "214A",{irekomi=26},"4C" ], },
			{ recipe=[ "i214B", ], },
		]
	},
	{ // コンボ
		fintag = "renkei_FF",
		// debug = 1,
		list =
		[
			{ recipe=[ ["D",1] ], },
			{ recipe=[ "D",{irekomi=10},{wait=10},{dash=5},"A+D" ], },
			{ recipe=[ {dl=10},{stick6=20},["D",1] ], },
			{ recipe=[ {dl=10},{stick6=20},"D",{irekomi=10},{wait=30},"6ABD" ], },
			{ recipe=[ {dl=10},"9",{wait=10},"B" ], },
			{ recipe=[ {dl=10},"9",{wait=10},"C" ], },
		]
	},
	{ // シメ
		fintag = "Fin_EXIW",
		gauge = [50,0],
		// debug = 1,
		list =
		[
			{ recipe=[ "22EX" ] },
		]
	},
	{ // シメ
		fintag = "Fin_AirEX",
		gauge = [50,0],
		// debug = 1,
		list =
		[
			{ recipe=[ "J236EX" ] },
		]
	},
	]
} );

//--------------------------------------------------------------
{	// A連打コンボ
	stmp = com.GetSkill(45); // 作成
	stmp.SetLotWait( 320 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 10 ); // 失敗確率
	stmp.checkfunc = function() // チェック
	{
		local st = BCom.GetStatus();
		if( !st.IsPMoveable() ) return 0; // 行動可能じゃないと発動しない
		if( st.GetELenX() > 25000 ) return 0; // 遠いときは発動しない
		if( !st.CheckPosState( _PosState_Ground ) ) return 0; // 地上じゃないとだめ
		if( st.GetELenY() != 0 ) return 0; // 相手も地上を要求

		return com_frequency2;
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();

		return 1;
	}
	stmp.PlusTagChainCombo( "SSCombo", [ "A","A",{rapid=1},"A","A","A",{irekomi=25},{dl=10},"A",{rapid=1},{landwait=80},["A",5] ] );
}

nowskillnum = 80;

local ComMoveNum_FF = nowskillnum;
{	// FFの後適当に動く
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function() : (ComMoveNum_FF)// チェック
	{
		if( !Battle_Std.IsMatchMvNameArray(["Mv_Atk_FFBase"]) )return 0;

		local st = BCom.GetStatus();
		if( st.GetSkill() == ComMoveNum_FF ) return 0; // この行動中でした

		return 9999; // FFしたら必ずここに来て欲しい
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		local move_tag = BCom.GetMoveTag();
		if( move_tag == "jp" ) // 
		{
			if( st.GetELenX() < 70000 ) // 結構近い
			{
				local next_ar = ["6","6AB","D","8","9","236A","236B"];//近距離
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}		
			else if( st.GetELenX() < 120000 ) // ちょっと離れている
			{
				local next_ar = ["6","6AB","6AB","6AB","4","4AB","D","7","8","9","9","236A",];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else
			{
				local next_ar = ["6","6","6AB","4","4AB","7","8","9","yousumi","yousumi","yousumi","yousumi"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
		}
	}
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "yousumi" ); // 
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "9" ); // 
	mtmp.Set( 9, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "8" ); // 
	mtmp.Set( 8, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "7" ); // 
	mtmp.Set( 7, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "6" ); // 
	mtmp.Set( 6, 0,  5, 20,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "4" ); // 
	mtmp.Set( 4, 0,  5, 20,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "6AB" ); // 
	mtmp.Set( 6, _eComButton_A|_eComButton_B,  10, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "4AB" ); // 
	mtmp.Set( 6, _eComButton_A|_eComButton_B,  10, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "D" ); // 
	mtmp.Set( 0, _eComButton_D,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "236A" );
	mtmp.SetSpSkill( def_CN_Skill_236A );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "236B" );
	mtmp.SetSpSkill( def_CN_Skill_236B );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
}
local ComMoveNum_CoffinA = nowskillnum;
{	// A棺乗りからの動作
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function() : (ComMoveNum_CoffinA)// チェック
	{
		if( !Battle_Std.IsMatchMvNameArray(["Mv_Skill_OnCoffinBaseA"]) )return 0;
		local st = BCom.GetStatus();
		if( st.GetSkill() == ComMoveNum_CoffinA ) return 0; // この行動中でした

		return 9999; // 棺に乗ったら必ずここに来て欲しい
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		local move_tag = BCom.GetMoveTag();
		//print("\n st.GetELenX():"+st.GetELenX());
		if( move_tag == "jp" ) // 
		{
			if( st.GetELenX() < 70000 ) // 結構近い
			{
				local next_ar = ["A","A","A","B","4D","A+D","A+D","7","8"];//暴れ多め
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}		
			else if( st.GetELenX() < 120000 ) // ちょっと離れている
			{
				local next_ar = ["A","B","C","C","4D","7","8","9"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else
			{
				local next_ar = ["C","C","C","4D","7","8","9","yousumi","yousumi","yousumi","yousumi"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
		}
		// 攻撃後のジャンプキャンセル分岐
		if( move_tag=="jc" )
		{
			if( st.CheckEState( _eComState_Damage ) )
			{
				//DAMAGE時 ジャンプキャンセルして空中行動へ
				local next_ar = ["9"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else if( st.CheckEState( _eComState_Guard ) )
			{
				//ガード時 ジャンプキャンセルしたりそのまま固め直したり
				local next_ar = ["7","8","8","8","9","9","9","9","yousumi"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else
			{
				// 空振りの時は様子見る
				BCom.Move_Jump( "yousumi" );
			}
		}
		return 1;
	}
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "yousumi" ); // 
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "9" ); // 
	mtmp.Set( 9, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "8" ); // 
	mtmp.Set( 8, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "7" ); // 
	mtmp.Set( 7, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "4D" ); // 
	mtmp.Set( 4, _eComButton_D,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "A" ); // 下段
	mtmp.Set( 0, _eComButton_A,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "B" ); // 対空
	mtmp.Set( 0, _eComButton_B,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "C" ); // 置き技
	mtmp.Set( 0, _eComButton_C,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "A+D" ); // 投げ
	mtmp.Set( 0, _eComButton_A|_eComButton_D,  2, 0,  _eComMoveFlag_MoveEnd );
}
local ComMoveNum_CoffinB = nowskillnum;
{	// BorC棺乗りからの動作
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function() : (ComMoveNum_CoffinB)// チェック
	{
		if( !Battle_Std.IsMatchMvNameArray(["Mv_Skill_OnCoffinBaseB"]) )return 0;
		local st = BCom.GetStatus();
		if( st.GetSkill() == ComMoveNum_CoffinB ) return 0; // この行動中でした

		return 9999; // 棺に乗ったら必ずここに来て欲しい
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		local move_tag = BCom.GetMoveTag();
		//print("\n st.GetELenX():"+st.GetELenX());
		if( move_tag == "jp" ) // 
		{
			if( st.GetELenX() < 70000 ) // 結構近い
			{
				local next_ar = ["A","A","A","B","C","4D","A+D","A+D","7","8"];//暴れ多め
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}		
			else if( st.GetELenX() < 120000 ) // ちょっと離れている
			{
				local next_ar = ["A","B","C","4D","7","8","9"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else
			{
				local next_ar = ["B","B","B","4D","7","8","9","yousumi","yousumi","yousumi","yousumi"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
		}
		// 攻撃後のジャンプキャンセル分岐
		if( move_tag=="jc" )
		{
			if( st.CheckEState( _eComState_Damage ) )
			{
				//DAMAGE時 ジャンプキャンセルして空中行動へ
				local next_ar = ["9"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else if( st.CheckEState( _eComState_Guard ) )
			{
				//ガード時 ジャンプキャンセルしたりそのまま固め直したり
				local next_ar = ["7","8","8","8","9","9","9","9","yousumi"];
				local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
				
				BCom.Move_Jump( next );
			}
			else
			{
				// 空振りの時は様子見る
				BCom.Move_Jump( "yousumi" );
			}
		}
		return 1;
	}
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "yousumi" ); // 
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "9" ); // 
	mtmp.Set( 9, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "8" ); // 
	mtmp.Set( 8, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "7" ); // 
	mtmp.Set( 7, 0,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "4D" ); // 
	mtmp.Set( 4, _eComButton_D,  2, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "A" ); // 下段
	mtmp.Set( 0, _eComButton_A,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "B" ); // 対空
	mtmp.Set( 0, _eComButton_B,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "C" ); // 置き技
	mtmp.Set( 0, _eComButton_C,  15, 0,  _eComMoveFlag_HitNext );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jc" ); // ジャンプキャンセル分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "A+D" ); // 投げ
	mtmp.Set( 0, _eComButton_A|_eComButton_D,  2, 0,  _eComMoveFlag_MoveEnd );
}

{	// 空中てきとう
	stmp = com.GetSkill(nowskillnum); nowskillnum++; // 作成
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 30 ); // 失敗確率
	stmp.checkfunc = function() // チェック
	{
		local st = BCom.GetStatus();
		if( !st.IsPMoveable() ) return 0; // 
		if( !st.CheckPosState( _PosState_Air ) ) return 0; // 

		return com_frequency2;
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		if( BCom.GetMoveTag() == "jp") // 空中攻撃初期値
		{
				local ar = ["6D","JB","JC","J2C","J236A","J236B","JFF"]; // 分岐先を定義する
				local jump = BMvEff.Random_Limit( ar.len() );
				BCom.Move_Jump( ar[jump] );
		}
		return 1;
	}
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "wait" );
	mtmp.Set( 0, 0,  0, 15,  0 );
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	// 
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "6D" );
	mtmp.SetSpSkill( def_CN_Assault_Air );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	//
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "JB" );
	mtmp.Set( 0, _eComButton_B,  2, 0,  _eComMoveFlag_MoveEnd );
	
	//
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "JC" );
	mtmp.Set( 0, _eComButton_C,  2, 0,  _eComMoveFlag_MoveEnd );
	
	// 
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "J2C" );
	mtmp.Set( 2, _eComButton_C,  2, 0,  _eComMoveFlag_MoveEnd );
	
	// 
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "J236A" );
	mtmp.SetSpSkill( def_CN_Skill_J236A );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	// 
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "J236B" );
	mtmp.SetSpSkill( def_CN_Skill_J236B );
	mtmp.Set( 0, 0,  2, 0,  _eComMoveFlag_MoveEnd );
	
	// 
	mtmp = stmp.PlusMove();
	mtmp.SetTag( "JFF" );
	mtmp.Set( 0, _eComButton_B|_eComButton_C,  2, 0,  _eComMoveFlag_MoveEnd );
	
}
{	// JFFからの動作
	stmp = com.GetSkill(nowskillnum); nowskillnum++;
	stmp.SetLotWait( 0 ); // 終了、失敗時のウェイト
	stmp.SetLotFailedAvg( 0 ); // 失敗確率
	stmp.checkfunc = function()// チェック
	{
		if( !Battle_Std.IsMatchMvNameArray(["Mv_Atk_AirBandC"]) )return 0;
		local st = BCom.GetStatus();

		return com_frequency4; // 空中行動に分岐してもいいので普通の値
	}
	stmp.updatefunc = function() // 採用時の更新
	{
		local st = BCom.GetStatus();
		local move_tag = BCom.GetMoveTag();
		//print("\n st.GetELenX():"+st.GetELenX());
		if( move_tag == "jp" ) // 
		{
			local next_ar = ["4","6"];
			local next = next_ar[ BMvEff.Random_Limit(next_ar.len()) ];
			
			BCom.Move_Jump( next );
		}
		return 1;
	}
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "jp" ); // 様子見て分岐
	mtmp.Set( 0, 0, 5, 0,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "4" ); // 
	mtmp.Set( 4, 0,  2, 10,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
	mtmp = stmp.PlusMove(); // 動き追加
	mtmp.SetTag( "6" ); // 
	mtmp.Set( 6, 0,  2, 10,  _eComMoveFlag_StickHold | _eComMoveFlag_MoveEnd );
	
}

// 最後にglobal_com_tmpへ渡す
ComBase_GlobalComTmp_Set( com );

